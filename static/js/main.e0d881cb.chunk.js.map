{"version":3,"sources":["component/Home/GeneCell.js","component/Home/VirtualTable.js","component/Home/Tables.js","page/Home.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","input","fontSize","GeneCell","props","useEffect","Button","size","color","onClick","selectGene","cellData","VirtualTable","useState","key","order","sortBy","setSortBy","handleSetSort","onColumnSort","tableRow","sort","a","b","style","overflowX","textAlign","marginTop","paddingTop","width","height","fixed","rowKey","columns","tableColumn","data","emptyRenderer","Box","display","justifyContent","alignItems","minHeight","Typography","variant","gutterBottom","fontWeight","Tables","classes","parsedCSV","setParsedCSV","readRemoteFile","geneList","header","dynamicTyping","skipEmptyLines","delimitersToGuess","complete","results","handleFetchDataSuccess","tableData","tmpColumn","Object","keys","map","col","colIndex","frozen","cellRenderer","Column","FrozenDirection","LEFT","column","colName","handleSelectGene","name","title","dataKey","resizable","align","Alignment","CENTER","sortable","gene","className","root","border","flexGrow","paper","padding","spacing","palette","text","secondary","button","margin","Copyright","Link","href","Date","getFullYear","flexDirection","main","marginBottom","footer","backgroundColor","type","grey","igvStyle","paddingBottom","Home","browser","setBrowser","targetGene","setTargetGene","glIndex","setGLIndex","file","igvContainer","document","getElementById","igv","createBrowser","genome","locus","tracks","url","autoscaleGroup","min","then","search","handleChangeGeneList","index","CssBaseline","Container","component","maxWidth","Grid","container","item","xs","console","log","handleChangeIGV","id","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e0d881cb.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport { makeStyles, Button } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  input: {\n    fontSize: '13px'\n  }\n}));\n\nconst GeneCell = (props) => {\n  const classes = useStyles();\n\n  useEffect(() => {\n  }, [props]);\n\n  return (\n    <span>\n      <Button size=\"small\" color=\"primary\" onClick={() => props.selectGene(props.cellData)}>\n      {props.cellData}\n        </Button>\n      {/* <InputBase\n        className={classes.input}\n        value={props.cellData}\n        inputProps={{ 'aria-label': 'naked' }}\n      /> */}\n    </span>\n  );\n};\n\nexport default GeneCell;","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Box } from '@material-ui/core';\n\nimport BaseTable, { AutoResizer } from 'react-base-table';\nimport 'react-base-table/styles.css';\nimport './tableStyle.css';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n}));\n\nexport default function VirtualTable(props) {\n  const classes = useStyles();\n\n  const [sortBy, setSortBy] = useState({ key: '', order: 'asc' });\n\n  const handleSetSort = (sortBy) => {\n    setSortBy(sortBy);\n  }\n\n  const onColumnSort = (sortBy) => {\n    const order = sortBy.order === 'asc' ? 1 : -1;\n    const tmpRow = [...props.tableRow];\n    return tmpRow.sort((a, b) => (a[sortBy.key] > b[sortBy.key] ? order : -order));\n  };\n\n  return (\n    <div style={{ overflowX: 'auto', textAlign: 'center', marginTop: \"0px\", paddingTop: '0px' }}>\n      <div style={{ width: '100%', height: props.height }}>\n        <AutoResizer>\n          {({ width, height }) => {\n            return (\n              <BaseTable\n                width={width}\n                height={height}\n                fixed\n                rowKey={props.rowKey}\n                // estimatedRowHeight={({ rowData, rowIndex }) => estRowHight(rowData, rowIndex)}\n                // estimatedRowHeight={61}\n                columns={props.tableColumn}\n                data={onColumnSort(sortBy)}\n                sortBy={sortBy}\n                onColumnSort={handleSetSort}\n                emptyRenderer={\n                  <Box\n                    display=\"flex\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                    minHeight=\"20em\">\n                    <Typography\n                      variant=\"h5\"\n                      gutterBottom\n                      style={{ color: 'grey', fontWeight: '900' }}>\n                      No data imported...\n                </Typography>\n                  </Box>\n                }\n              />\n            );\n          }}\n        </AutoResizer>\n      </div>\n    </div>\n  );\n}","import React, { useState, useEffect } from \"react\";\n\nimport { Button, Container, Grid, Paper, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { readString, readRemoteFile } from \"react-papaparse\";\nimport { Column } from \"react-base-table\";\n\nimport GeneCell from './GeneCell'\nimport VirtualTable from \"./VirtualTable\";\n\nexport default function Tables(props) {\n  const classes = useStyles();\n  const [parsedCSV, setParsedCSV] = useState(null);\n\n  useEffect(() => {\n    // dispatch(fetchTable(props.tableName.replace(/[ ]/gi, '_').toLowerCase()))\n    const result = readRemoteFile(\n      \"https://raw.githubusercontent.com/YuanTian1991/crc-igv/master/data/\" + props.geneList + \".csv\",\n      {\n        header: true,\n      dynamicTyping: true,\n      skipEmptyLines: true,\n      delimitersToGuess: [',', '\t', '|', '\\t'],\n        complete: (results) => {\n          handleFetchDataSuccess(results.data)\n          // setData(results);\n        },\n      }\n    );\n  }, [props.geneList]);\n\n  const handleFetchDataSuccess = (tableData) => {\n    const tmpColumn = Object.keys(tableData[0]).map((col, colIndex) => {\n\n      let frozen\n      let cellRenderer\n      let width = 100\n      if(col === 'geneName') {\n        frozen = Column.FrozenDirection.LEFT\n        cellRenderer =  ({ cellData, column }) => { return(<GeneCell cellData={cellData} colName={column} selectGene={handleSelectGene} />)}\n        width = 150\n      }\n\n      return {\n        name: col,\n        title: col,\n        key: col,\n        dataKey: col,\n        width: width,\n        height: 30,\n        resizable: true,\n        align: Column.Alignment.CENTER,\n        frozen:frozen,\n        cellRenderer: cellRenderer,\n        // cellRenderer: ({ cellData, column }) => <EditableCell cellData={cellData} colName={column} />,\n        sortable: true,\n      };\n    });\n    setParsedCSV({ tableColumn: tmpColumn, tableRow: tableData });\n  };\n\n  const handleSelectGene = (gene) => {\n    props.selectGene(gene)\n  }\n\n  return (\n    <div className={classes.root}>\n      {parsedCSV !== null ? (\n        <div style={{border: '1px solid #eeeeee'}}>\n          <VirtualTable\n            tableColumn={parsedCSV.tableColumn}\n            tableRow={parsedCSV.tableRow}\n            height={\"75vh\"}\n            rowKey={\"geneName\"}\n          />\n        </div>\n      ) : (\n        <Typography\n          variant=\"body2\"\n          className=\"mb-4\"\n          gutterBottom\n          style={{ color: \"hsla(0,0%,0%,0.6)\" }}\n        >\n          No data loaded\n        </Typography>\n      )}\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(0),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Container,\n  Grid,\n  CssBaseline,\n  Typography,\n  Link,\n  Paper,\n  Button,\n} from \"@material-ui/core\";\n\nimport Tables from \"../component/Home/Tables\";\n\nimport igv from \"igv\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Adele Lab\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    minHeight: \"100vh\",\n  },\n  main: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(0),\n  },\n  footer: {\n    padding: theme.spacing(3, 2),\n    marginTop: \"auto\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[200]\n        : theme.palette.grey[800],\n  },\n  igvStyle: {\n    width: \"100%\",\n    paddingTop: \"10px\",\n    paddingBottom: \"10px\",\n    margin: \"8px\",\n    border: \"1px solid lightgray\",\n  },\n}));\n\nexport default function Home() {\n  const classes = useStyles();\n  const [browser, setBrowser] = useState(null);\n  const [targetGene, setTargetGene] = useState(\"BRCA1\");\n  const [glIndex, setGLIndex] = useState(0);\n\n  const geneList = [\n    { title: \"Promoter 5hmC Gene List\", file: \"Promoter5hmCGene\" },\n    { title: \"GeneBody 5hmC Gene List\", file: \"GeneBody5hmCGene\" },\n  ];\n\n  useEffect(() => {\n    var igvContainer = document.getElementById(\"igv-div\");\n    var igvOptions = {\n      genome: \"hg38\",\n      locus: \"BRCA1\",\n      tracks: [\n        {\n          name: \"NC\",\n          url: \"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/283c9d5e-eb5b-4a79-a95a-85d8dfd9d032/NC.bw?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20210819%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20210819T175900Z&X-Amz-Expires=86400&X-Amz-Signature=b4318bd94dd16b4b806c142f811c78e39c3a50f072d1fc7bea8968e27569f314&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22NC.bw%22\",\n          type: \"wig\",\n          color: \"rgb(244, 187, 74, 0.4)\",\n          autoscaleGroup: 1,\n          min: \"0\",\n        },\n        {\n          name: \"TC\",\n          url: \"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/fceb80fe-e19c-40e1-8ce9-978ba86c0e1b/TC.bw?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20210819%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20210819T180353Z&X-Amz-Expires=86400&X-Amz-Signature=9cf7d59cae1cd69d3ce86923879bea6f918dc8f14fe14d8009729bee0ad151eb&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22TC.bw%22\",\n          type: \"wig\",\n          color: \"rgb(8, 146, 165, 0.4)\",\n          autoscaleGroup: 1,\n          min: \"0\",\n        },\n        {\n          name: \"LT\",\n          url: \"https://s3.us-west-2.amazonaws.com/secure.notion-static.com/931602fe-3335-4ab9-b5b5-f38e53a89f6f/LT.bw?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAT73L2G45O3KS52Y5%2F20210819%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20210819T180401Z&X-Amz-Expires=86400&X-Amz-Signature=7ccdffa3608003be3a79687171d7ef88e1791be0c12b84ac80324842aa75bfd5&X-Amz-SignedHeaders=host&response-content-disposition=filename%20%3D%22LT.bw%22\",\n          type: \"wig\",\n          color: \"rgb(48, 71, 94, 0.4)\",\n          autoscaleGroup: 1,\n          min: \"0\",\n        },\n      ],\n    };\n    return igv.createBrowser(igvContainer, igvOptions).then(function (browser) {\n      setBrowser(browser);\n    });\n  }, []);\n\n  const handleChangeIGV = (gene) => {\n    console.log(gene);\n    setTargetGene(gene);\n  };\n\n  useEffect(() => {\n    if (browser !== null) {\n      browser.search(targetGene);\n    }\n  }, [targetGene]);\n\n  const handleChangeGeneList = (index) => {\n    setGLIndex(index);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Container component=\"main\" className={classes.main} maxWidth=\"xl\">\n        <Grid container spacing={3}>\n          <Grid item xs={6} style={{ textAlign: \"left\" }}>\n            <div style={{ marginBottom: \"10px\" }}>\n              <Button\n                size=\"small\"\n                variant=\"contained\"\n                color=\"primary\"\n                style={{ margin: \"5px\" }}\n                onClick={() => handleChangeGeneList(0)}\n              >\n                Promoter\n              </Button>\n              <Button\n                size=\"small\"\n                variant=\"contained\"\n                color=\"primary\"\n                style={{ margin: \"5px\" }}\n                onClick={() => handleChangeGeneList(1)}\n              >\n                GeneBody\n              </Button>\n              <Typography style={{ marginBottom: \"10px\", marginTop: \"10px\" }}>\n                {geneList[glIndex].title}\n              </Typography>\n            </div>\n\n            <Tables\n              selectGene={(gene) => handleChangeIGV(gene)}\n              geneList={geneList[glIndex].file}\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <div id=\"igv-div\" className={classes.igvStyle}></div>\n          </Grid>\n        </Grid>\n      </Container>\n\n      <footer className={classes.footer}>\n        <Container maxWidth=\"sm\">\n          <Typography variant=\"body1\">CRC Project IGV App</Typography>\n          <Copyright />\n        </Container>\n      </footer>\n    </div>\n  );\n}\n","// import logo from './logo.svg';\nimport './App.css';\n\nimport Home from \"./page/Home\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n      {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}