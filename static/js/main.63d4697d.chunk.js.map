{"version":3,"sources":["component/Home/GeneCell.js","component/Home/VirtualTable.js","component/Home/Tables.js","page/HydroEnrich.js","page/Home.js","page/Methylation.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","input","fontSize","GeneCell","props","useEffect","Button","size","color","onClick","selectGene","rowData","cellData","VirtualTable","useState","key","order","sortBy","setSortBy","handleSetSort","onColumnSort","tableRow","sort","a","b","style","overflowX","textAlign","marginTop","paddingTop","width","height","fixed","rowKey","columns","tableColumn","data","emptyRenderer","Box","display","justifyContent","alignItems","minHeight","Typography","variant","gutterBottom","fontWeight","Tables","classes","parsedCSV","setParsedCSV","readRemoteFile","geneList","header","dynamicTyping","skipEmptyLines","delimitersToGuess","complete","results","handleFetchDataSuccess","tableData","tmpColumn","Object","keys","map","col","colIndex","frozen","cellRenderer","Column","FrozenDirection","LEFT","column","colName","handleSelectGene","name","title","dataKey","resizable","align","Alignment","CENTER","sortable","gene","console","log","coordinate","chr","start","end","className","root","border","flexGrow","paper","padding","spacing","palette","text","secondary","button","margin","Copyright","Link","href","Date","getFullYear","flexDirection","main","marginBottom","footer","backgroundColor","type","grey","igvStyle","paddingBottom","Home","browser","setBrowser","browser500","setBrowser500","targetGene","setTargetGene","glIndex","setGLIndex","file","igvContainer","document","getElementById","igv","createBrowser","genome","locus","tracks","url","autoscaleGroup","min","then","igvContainer_500","search","handleChangeGeneList","index","CssBaseline","Container","component","maxWidth","Grid","container","item","xs","handleChangeIGV","id","App","exact","path","HydroEnrich","Methylation","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.63d4697d.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport { makeStyles, Button } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  input: {\n    fontSize: \"13px\",\n  },\n}));\n\nconst GeneCell = (props) => {\n  const classes = useStyles();\n\n  useEffect(() => {}, [props]);\n\n  return (\n    <span>\n      <Button\n        size=\"small\"\n        color=\"primary\"\n        onClick={() => props.selectGene(props.rowData)}\n      >\n        {props.cellData}\n      </Button>\n      {/* <InputBase\n        className={classes.input}\n        value={props.cellData}\n        inputProps={{ 'aria-label': 'naked' }}\n      /> */}\n    </span>\n  );\n};\n\nexport default GeneCell;\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Box } from '@material-ui/core';\n\nimport BaseTable, { AutoResizer } from 'react-base-table';\nimport 'react-base-table/styles.css';\nimport './tableStyle.css';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n}));\n\nexport default function VirtualTable(props) {\n  const classes = useStyles();\n\n  const [sortBy, setSortBy] = useState({ key: '', order: 'asc' });\n\n  const handleSetSort = (sortBy) => {\n    setSortBy(sortBy);\n  }\n\n  const onColumnSort = (sortBy) => {\n    const order = sortBy.order === 'asc' ? 1 : -1;\n    const tmpRow = [...props.tableRow];\n    return tmpRow.sort((a, b) => (a[sortBy.key] > b[sortBy.key] ? order : -order));\n  };\n\n  return (\n    <div style={{ overflowX: 'auto', textAlign: 'center', marginTop: \"0px\", paddingTop: '0px' }}>\n      <div style={{ width: '100%', height: props.height }}>\n        <AutoResizer>\n          {({ width, height }) => {\n            return (\n              <BaseTable\n                width={width}\n                height={height}\n                fixed\n                rowKey={props.rowKey}\n                // estimatedRowHeight={({ rowData, rowIndex }) => estRowHight(rowData, rowIndex)}\n                // estimatedRowHeight={61}\n                columns={props.tableColumn}\n                data={onColumnSort(sortBy)}\n                sortBy={sortBy}\n                onColumnSort={handleSetSort}\n                emptyRenderer={\n                  <Box\n                    display=\"flex\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                    minHeight=\"20em\">\n                    <Typography\n                      variant=\"h5\"\n                      gutterBottom\n                      style={{ color: 'grey', fontWeight: '900' }}>\n                      No data imported...\n                </Typography>\n                  </Box>\n                }\n              />\n            );\n          }}\n        </AutoResizer>\n      </div>\n    </div>\n  );\n}","import React, { useState, useEffect } from \"react\";\n\nimport { Button, Container, Grid, Paper, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { readString, readRemoteFile } from \"react-papaparse\";\nimport { Column } from \"react-base-table\";\n\nimport GeneCell from \"./GeneCell\";\nimport VirtualTable from \"./VirtualTable\";\n\nexport default function Tables(props) {\n  const classes = useStyles();\n  const [parsedCSV, setParsedCSV] = useState(null);\n\n  useEffect(() => {\n    // dispatch(fetchTable(props.tableName.replace(/[ ]/gi, '_').toLowerCase()))\n    const result = readRemoteFile(\n      \"https://raw.githubusercontent.com/YuanTian1991/crc-igv/master/data/\" +\n        props.geneList,\n      {\n        header: true,\n        dynamicTyping: true,\n        skipEmptyLines: true,\n        delimitersToGuess: [\",\", \"\t\", \"|\", \"\\t\"],\n        complete: (results) => {\n          handleFetchDataSuccess(results.data);\n          // setData(results);\n        },\n      }\n    );\n  }, [props.geneList]);\n\n  const handleFetchDataSuccess = (tableData) => {\n    const tmpColumn = Object.keys(tableData[0]).map((col, colIndex) => {\n      let frozen;\n      let cellRenderer;\n      let width = 100;\n      if (col === \"geneSymbol\") {\n        frozen = Column.FrozenDirection.LEFT;\n        cellRenderer = ({ cellData, column, rowData }) => {\n          return (\n            <GeneCell\n              cellData={cellData}\n              colName={column}\n              rowData={rowData}\n              selectGene={handleSelectGene}\n            />\n          );\n        };\n        width = 150;\n      }\n      return {\n        name: col,\n        title: col,\n        key: col,\n        dataKey: col,\n        width: width,\n        height: 30,\n        resizable: true,\n        align: Column.Alignment.CENTER,\n        frozen: frozen,\n        cellRenderer: cellRenderer,\n        // cellRenderer: ({ cellData, column }) => <EditableCell cellData={cellData} colName={column} />,\n        sortable: true,\n      };\n    });\n    setParsedCSV({ tableColumn: tmpColumn, tableRow: tableData });\n  };\n\n  const handleSelectGene = (gene) => {\n    console.log(gene);\n\n    let coordinate = gene.chr + \":\" + gene.start + \"-\" + gene.end;\n    props.selectGene(coordinate);\n  };\n\n  return (\n    <div className={classes.root}>\n      {parsedCSV !== null ? (\n        <div style={{ border: \"1px solid #eeeeee\" }}>\n          <VirtualTable\n            tableColumn={parsedCSV.tableColumn}\n            tableRow={parsedCSV.tableRow}\n            height={\"75vh\"}\n            rowKey={\"geneName\"}\n          />\n        </div>\n      ) : (\n        <Typography\n          variant=\"body2\"\n          className=\"mb-4\"\n          gutterBottom\n          style={{ color: \"hsla(0,0%,0%,0.6)\" }}\n        >\n          No data loaded\n        </Typography>\n      )}\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(0),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Container,\n  Grid,\n  CssBaseline,\n  Typography,\n  Link,\n  Paper,\n  Button,\n} from \"@material-ui/core\";\n\nimport Tables from \"../component/Home/Tables\";\n\nimport igv from \"igv\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Adele Lab\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    minHeight: \"100vh\",\n  },\n  main: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(0),\n  },\n  footer: {\n    padding: theme.spacing(2),\n    marginTop: \"auto\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[200]\n        : theme.palette.grey[800],\n  },\n  igvStyle: {\n    width: \"100%\",\n    paddingTop: \"10px\",\n    paddingBottom: \"10px\",\n    margin: \"8px\",\n    border: \"1px solid lightgray\",\n  },\n}));\n\nexport default function Home() {\n  const classes = useStyles();\n  const [browser, setBrowser] = useState(null);\n  const [browser500, setBrowser500] = useState(null);\n  const [targetGene, setTargetGene] = useState(\"BRCA1\");\n  const [glIndex, setGLIndex] = useState(0);\n\n  const geneList = [\n    { title: \"Promoter 5hmC Enrichment\", file: \"promoterTable.csv\" },\n    { title: \"GeneBody 5hmC Enrichment\", file: \"genebodyTable.csv\" },\n  ];\n\n  useEffect(() => {\n    var igvContainer = document.getElementById(\"igv-div\");\n    var igvOptions = {\n      genome: \"hg38\",\n      locus: \"BRCA1\",\n      tracks: [\n        {\n          name: \"NC\",\n          url: \"https://s3.eu-central-1.wasabisys.com/crc-bath/5hmCMergedBW/NC_cliped.bw\",\n          type: \"wig\",\n          color: \"rgb(244, 187, 74, 0.4)\",\n          autoscaleGroup: 1,\n          min: \"0\",\n        },\n        {\n          name: \"TC\",\n          url: \"https://s3.eu-central-1.wasabisys.com/crc-bath/5hmCMergedBW/TC_cliped.bw\",\n          type: \"wig\",\n          color: \"rgb(8, 146, 165, 0.4)\",\n          autoscaleGroup: 1,\n          min: \"0\",\n        },\n        {\n          name: \"LT\",\n          url: \"https://s3.eu-central-1.wasabisys.com/crc-bath/5hmCMergedBW/LT_cliped.bw\",\n          type: \"wig\",\n          color: \"rgb(48, 71, 94, 0.4)\",\n          autoscaleGroup: 1,\n          min: \"0\",\n        },\n        {\n          name: \"NL\",\n          url: \"https://s3.eu-central-1.wasabisys.com/crc-bath/5hmCMergedBW/NL_cliped.bw\",\n          type: \"wig\",\n          color: \"rgb(232, 72, 85, 0.4)\",\n          autoscaleGroup: 1,\n          min: \"0\",\n        },\n      ],\n    };\n\n    igv.createBrowser(igvContainer, igvOptions).then(function (browser) {\n      setBrowser(browser);\n    });\n\n    var igvContainer_500 = document.getElementById(\"igv-div_500\");\n    var igvOptions_500 = {\n      genome: \"hg38\",\n      locus: \"BRCA1\",\n      tracks: [\n        {\n          name: \"NC\",\n          url: \"https://s3.eu-central-1.wasabisys.com/crc-bath/5hmCMergedBW/NC_sig_cliped.bw\",\n          type: \"wig\",\n          color: \"rgb(244, 187, 74, 0.4)\",\n          autoscaleGroup: 1,\n          min: \"0\",\n        },\n        {\n          name: \"TC\",\n          url: \"https://s3.eu-central-1.wasabisys.com/crc-bath/5hmCMergedBW/TC_sig_cliped.bw\",\n          type: \"wig\",\n          color: \"rgb(8, 146, 165, 0.4)\",\n          autoscaleGroup: 1,\n          min: \"0\",\n        },\n        {\n          name: \"LT\",\n          url: \"https://s3.eu-central-1.wasabisys.com/crc-bath/5hmCMergedBW/LT_sig_cliped.bw\",\n          color: \"rgb(48, 71, 94, 0.4)\",\n          autoscaleGroup: 1,\n          min: \"0\",\n        },\n        {\n          name: \"NL\",\n          url: \"https://s3.eu-central-1.wasabisys.com/crc-bath/5hmCMergedBW/NL_sig_cliped.bw\",\n          type: \"wig\",\n          color: \"rgb(232, 72, 85, 0.4)\",\n          autoscaleGroup: 1,\n          min: \"0\",\n        },\n      ],\n    };\n    igv\n      .createBrowser(igvContainer_500, igvOptions_500)\n      .then(function (browser) {\n        setBrowser500(browser);\n      });\n  }, []);\n\n  const handleChangeIGV = (gene) => {\n    console.log(gene);\n    setTargetGene(gene);\n  };\n\n  useEffect(() => {\n    if (browser !== null) {\n      browser.search(targetGene);\n    }\n\n    if (browser500 !== null) {\n      browser500.search(targetGene);\n    }\n  }, [targetGene]);\n\n  const handleChangeGeneList = (index) => {\n    setGLIndex(index);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Container component=\"main\" className={classes.main} maxWidth=\"xl\">\n        <Grid container spacing={3}>\n          <Grid item xs={6} style={{ textAlign: \"left\" }}>\n            <div style={{ marginBottom: \"10px\" }}>\n              <Button\n                size=\"small\"\n                variant=\"contained\"\n                color=\"primary\"\n                style={{ margin: \"5px\" }}\n                onClick={() => handleChangeGeneList(0)}\n              >\n                Promoter\n              </Button>\n              <Button\n                size=\"small\"\n                variant=\"contained\"\n                color=\"primary\"\n                style={{ margin: \"5px\" }}\n                onClick={() => handleChangeGeneList(1)}\n              >\n                GeneBody\n              </Button>\n              <Typography style={{ marginBottom: \"10px\", marginTop: \"10px\" }}>\n                {geneList[glIndex].title}\n              </Typography>\n            </div>\n\n            <Tables\n              selectGene={(gene) => handleChangeIGV(gene)}\n              geneList={geneList[glIndex].file}\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <div id=\"igv-div\" className={classes.igvStyle}></div>\n\n            <div id=\"igv-div_500\" className={classes.igvStyle}></div>\n          </Grid>\n        </Grid>\n      </Container>\n\n      <footer className={classes.footer}>\n        <Container maxWidth=\"sm\">\n          <Typography variant=\"body1\">CRC Project IGV App</Typography>\n          <Copyright />\n        </Container>\n      </footer>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Container,\n  Grid,\n  CssBaseline,\n  Typography,\n  Link,\n  Paper,\n  Button,\n} from \"@material-ui/core\";\n\nimport Tables from \"../component/Home/Tables\";\n\nimport igv from \"igv\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Adele Lab\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    minHeight: \"100vh\",\n  },\n  main: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(0),\n  },\n  footer: {\n    padding: theme.spacing(2),\n    marginTop: \"auto\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[200]\n        : theme.palette.grey[800],\n  },\n  igvStyle: {\n    width: \"100%\",\n    paddingTop: \"10px\",\n    paddingBottom: \"10px\",\n    margin: \"8px\",\n    border: \"1px solid lightgray\",\n  },\n}));\n\nexport default function Home() {\n  const classes = useStyles();\n  const [browser, setBrowser] = useState(null);\n  const [browser500, setBrowser500] = useState(null);\n  const [targetGene, setTargetGene] = useState(\"BRCA1\");\n  const [glIndex, setGLIndex] = useState(0);\n\n  const geneList = [\n    { title: \"Promoter 5hmC Gene List\", file: \"Promoter5hmCGene.csv\" },\n    { title: \"GeneBody 5hmC Gene List\", file: \"GeneBody5hmCGene.csv\" },\n  ];\n\n  useEffect(() => {\n    var igvContainer = document.getElementById(\"igv-div\");\n    var igvOptions = {\n      genome: \"hg38\",\n      locus: \"BRCA1\",\n      tracks: [\n        {\n          name: \"NC\",\n          url: \"https://crc-igv.s3.eu-west-2.amazonaws.com/BigWig/NC_smallbin.bw\",\n          type: \"wig\",\n          color: \"rgb(244, 187, 74, 0.4)\",\n          autoscaleGroup: 1,\n          min: \"0\",\n        },\n        {\n          name: \"TC\",\n          url: \"https://crc-igv.s3.eu-west-2.amazonaws.com/BigWig/TC_smallbin.bw\",\n          type: \"wig\",\n          color: \"rgb(8, 146, 165, 0.4)\",\n          autoscaleGroup: 1,\n          min: \"0\",\n        },\n        {\n          name: \"LT\",\n          url: \"https://crc-igv.s3.eu-west-2.amazonaws.com/BigWig/LT_smallbin.bw\",\n          type: \"wig\",\n          color: \"rgb(48, 71, 94, 0.4)\",\n          autoscaleGroup: 1,\n          min: \"0\",\n        },\n      ],\n    };\n\n    igv.createBrowser(igvContainer, igvOptions).then(function (browser) {\n      setBrowser(browser);\n    });\n\n    var igvContainer_500 = document.getElementById(\"igv-div_500\");\n    var igvOptions_500 = {\n      genome: \"hg38\",\n      locus: \"BRCA1\",\n      tracks: [\n        {\n          name: \"NC\",\n          url: \"https://crc-igv.s3.eu-west-2.amazonaws.com/BigWig/NC_Sig.bw\",\n          type: \"wig\",\n          color: \"rgb(244, 187, 74, 0.4)\",\n          autoscaleGroup: 1,\n          min: \"0\",\n        },\n        {\n          name: \"TC\",\n          url: \"https://crc-igv.s3.eu-west-2.amazonaws.com/BigWig/TC_Sig.bw\",\n          type: \"wig\",\n          color: \"rgb(8, 146, 165, 0.4)\",\n          autoscaleGroup: 1,\n          min: \"0\",\n        },\n        {\n          name: \"LT\",\n          url: \"https://crc-igv.s3.eu-west-2.amazonaws.com/BigWig/LT_Sig.bw\",\n          color: \"rgb(48, 71, 94, 0.4)\",\n          autoscaleGroup: 1,\n          min: \"0\",\n        },\n      ],\n    };\n    igv\n      .createBrowser(igvContainer_500, igvOptions_500)\n      .then(function (browser) {\n        setBrowser500(browser);\n      });\n  }, []);\n\n  const handleChangeIGV = (gene) => {\n    console.log(gene);\n    setTargetGene(gene);\n  };\n\n  useEffect(() => {\n    if (browser !== null) {\n      browser.search(targetGene);\n    }\n\n    if (browser500 !== null) {\n      browser500.search(targetGene);\n    }\n  }, [targetGene]);\n\n  const handleChangeGeneList = (index) => {\n    setGLIndex(index);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Container component=\"main\" className={classes.main} maxWidth=\"xl\">\n        <Grid container spacing={3}>\n          <Grid item xs={6} style={{ textAlign: \"left\" }}>\n            <div style={{ marginBottom: \"10px\" }}>\n              <Button\n                size=\"small\"\n                variant=\"contained\"\n                color=\"primary\"\n                style={{ margin: \"5px\" }}\n                onClick={() => handleChangeGeneList(0)}\n              >\n                Promoter\n              </Button>\n              <Button\n                size=\"small\"\n                variant=\"contained\"\n                color=\"primary\"\n                style={{ margin: \"5px\" }}\n                onClick={() => handleChangeGeneList(1)}\n              >\n                GeneBody\n              </Button>\n              <Typography style={{ marginBottom: \"10px\", marginTop: \"10px\" }}>\n                {geneList[glIndex].title}\n              </Typography>\n            </div>\n\n            <Tables\n              selectGene={(gene) => handleChangeIGV(gene)}\n              geneList={geneList[glIndex].file}\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <div id=\"igv-div\" className={classes.igvStyle}></div>\n\n            <div id=\"igv-div_500\" className={classes.igvStyle}></div>\n          </Grid>\n        </Grid>\n      </Container>\n\n      <footer className={classes.footer}>\n        <Container maxWidth=\"sm\">\n          <Typography variant=\"body1\">CRC Project IGV App</Typography>\n          <Copyright />\n        </Container>\n      </footer>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Container,\n  Grid,\n  CssBaseline,\n  Typography,\n  Link,\n  Paper,\n  Button,\n} from \"@material-ui/core\";\n\nimport Tables from \"../component/Home/Tables\";\n\nimport igv from \"igv\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Adele Lab\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    minHeight: \"100vh\",\n  },\n  main: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(0),\n  },\n  footer: {\n    padding: theme.spacing(2),\n    marginTop: \"auto\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[200]\n        : theme.palette.grey[800],\n  },\n  igvStyle: {\n    width: \"100%\",\n    paddingTop: \"10px\",\n    paddingBottom: \"10px\",\n    margin: \"8px\",\n    border: \"1px solid lightgray\",\n  },\n}));\n\nexport default function Home() {\n  const classes = useStyles();\n  const [browser, setBrowser] = useState(null);\n\n  useEffect(() => {\n    var igvContainer = document.getElementById(\"igv-div\");\n    var igvOptions = {\n      genome: \"hg38\",\n      locus: \"BRCA1\",\n      tracks: [\n        {\n          name: \"NC_5hmC\",\n          url: \"https://crc-igv.s3.eu-west-2.amazonaws.com/BigWig/NC_smallbin.bw\",\n          type: \"wig\",\n          color: \"rgb(244, 187, 74, 0.4)\",\n          autoscaleGroup: 1,\n          min: \"0\",\n        },\n        {\n          name: \"TC_5hmC\",\n          url: \"https://crc-igv.s3.eu-west-2.amazonaws.com/BigWig/TC_smallbin.bw\",\n          type: \"wig\",\n          color: \"rgb(8, 146, 165, 0.4)\",\n          autoscaleGroup: 1,\n          min: \"0\",\n        },\n        {\n          name: \"LT_5hmC\",\n          url: \"https://crc-igv.s3.eu-west-2.amazonaws.com/BigWig/LT_smallbin.bw\",\n          type: \"wig\",\n          color: \"rgb(48, 71, 94, 0.4)\",\n          autoscaleGroup: 1,\n          min: \"0\",\n        },\n        {\n          name: \"NC_Meth\",\n          url: \"https://crc-igv.s3.eu-west-2.amazonaws.com/BigWig/NC_MBDseq.bw\",\n          type: \"wig\",\n          color: \"rgb(244, 187, 74)\",\n          autoscaleGroup: 2,\n          min: \"0\",\n        },\n        {\n          name: \"TC_Meth\",\n          url: \"https://crc-igv.s3.eu-west-2.amazonaws.com/BigWig/TC_MBDseq.bw\",\n          type: \"wig\",\n          color: \"rgb(8, 146, 165)\",\n          autoscaleGroup: 2,\n          min: \"0\",\n        },\n        {\n          name: \"LT_Meth\",\n          url: \"https://crc-igv.s3.eu-west-2.amazonaws.com/BigWig/LT_MBDseq.bw\",\n          type: \"wig\",\n          color: \"rgb(48, 71, 94)\",\n          autoscaleGroup: 2,\n          min: \"0\",\n        },\n      ],\n    };\n\n    igv.createBrowser(igvContainer, igvOptions).then(function (browser) {\n      setBrowser(browser);\n    });\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Container component=\"main\" className={classes.main} maxWidth=\"xl\">\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <div id=\"igv-div\" className={classes.igvStyle}></div>\n          </Grid>\n        </Grid>\n      </Container>\n\n      <footer className={classes.footer}>\n        <Container maxWidth=\"sm\">\n          <Typography variant=\"body1\">CRC Project IGV App</Typography>\n          <Copyright />\n        </Container>\n      </footer>\n    </div>\n  );\n}\n","// import logo from './logo.svg';\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\n\nimport HydroEnrich from \"./page/HydroEnrich\";\nimport Home from \"./page/Home\";\nimport Methylation from \"./page/Methylation\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/HydroEnrich\" component={HydroEnrich} />\n          <Route exact path=\"/methylation\" component={Methylation} />\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}